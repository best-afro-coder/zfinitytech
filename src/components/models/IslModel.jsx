/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 scene.gltf --transform 
Files: scene.gltf [36.83KB] > C:\Users\ProUSer\Documents\3d\icon_for_the_web_on_white_background\scene-transformed.glb [643.45KB] (-1647%)
Author: Air White Design Â® (https://sketchfab.com/airwhitedesign)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/icon-for-the-web-on-white-background-2a45d1787c954e8d862cd47a6feacef0
Title: ICON FOR THE WEB on white background
*/
"use client"
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

const IslModel = React.memo(function IslModel (props) {
  const { nodes, materials, animations } = useGLTF('/models/isl-transformed.glb')

  const group = useRef()

  useFrame(() => {

    group.current.rotation.y +=0.007;

  });


  return (
    <group 
    ref={group} 
    {...props} 
    dispose={null}
    position={[0, 0, 0]}
    scale={[1, 1, 1]}
    rotation={[0.25, 0, 0]}
    
    >
      <group name="Sketchfab_Scene">
        <group name="Root" rotation={[-Math.PI / 2, 0, 0]} scale={0.08}>
          <group name="Camera" position={[4.452, -32.071, 13.876]} rotation={[1.282, 0.099, 0.029]} scale={12.788} />
        </group>
        <mesh name="arbre_tronc_0" geometry={nodes.arbre_tronc_0.geometry} material={materials.PaletteMaterial001} position={[0.073, 0.411, 0.079]} rotation={[0.041, 0.262, 0.85]} scale={[0.24, 0.315, 0.562]} />
        <mesh name="Curve_0" geometry={nodes.Curve_0.geometry} material={materials.PaletteMaterial002} position={[-0.022, 0.451, -0.61]} rotation={[0.567, -0.024, -0.025]} scale={6.722} />
        <mesh name="Curve000_0" geometry={nodes.Curve000_0.geometry} material={materials.PaletteMaterial003} position={[0.131, -0.203, 0.029]} rotation={[-Math.PI / 2, 0, -1.728]} scale={[18.727, 18.727, 6.714]} />
      </group>
    </group>
  );
});

export default IslModel
useGLTF.preload('/models/isl-transformed.glb')
